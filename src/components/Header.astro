---
import NavMobile from "@components/navigation/NavMobile.vue";
import { Icon } from "astro-icon/components";

import PageFind from "@components/common/PageFind.astro";
import CartButton from "@components/shop/CartButton.vue";
import ColorSwitch from "@components/common/ColorSwitch.vue";
import { t } from "@util/translate";

const { menu, title, social } = Astro.props;
const currentPath = Astro.url.pathname.split("/")[1];

const isActive = (href) => {
  if (currentPath === "" && href == "/") return true;
  if (currentPath !== "" && href.startsWith(`/${currentPath}`)) return true;
};
---

<header class="surface-menu nav sticky top-0 z-50" transition:name="nav">
  <nav class="container-xl flex flex-nowrap items-stretch gap-6">
    <a
      href="/"
      aria-label={title}
      class="grid place-items-center py-3 text-primary"
      ><Icon name="logo" class="w-40 h-20" /></a
    >

    {
      (
        <ul class="nav-underline relative -mr-4  ml-auto flex flex-nowrap justify-end pl-4 uppercase md:mr-0">

          <li>
            <CartButton
              label={t("cart")}
              client:idle
              transition:persist
              transition:name="cart"
            >
              <Icon name="shopping-cart" class="h-6 w-6" />
            </CartButton>
          </li>

          <li>
            <ColorSwitch client:idle />
          </li>

          <li class="md:hidden">
            
          </li>
        </ul>
      )
    }
  </nav>
</header>
<style>
  .nav {
    @apply transition-transform duration-500;
    ul {
      --_gap: 1rem;
    }
    .nav-underline li:not(ul li ul li) {
      @apply relative overflow-hidden;
      padding: calc(var(--_gap) / 2);
      min-inline-size: 1.3rem;

      &::after {
        @apply absolute rounded-full bg-primary;
        content: "";
        inset-inline: 0;
        inset-block-end: 0;
        block-size: 5px;

        translate: var(--_translate, 0);
        scale: var(--_scale, 0) 1;
        transition:
          scale 100ms var(--_scale-delay, 0ms),
          translate 200ms,
          color 200ms;
      }
      &:hover ~ li {
        --_translate: -100%;
        --_scale-delay: 200ms;
      }
    }
    &:hover li {
      --_translate: 100%;
      --_scale-delay: 200ms;
    }

    li:hover {
      --_scale: 1;
      --_translate: 0;
      --_scale-delay: 0ms;
      @apply text-primary;
    }
  }
</style>
